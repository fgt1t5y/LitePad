:root {
  --FontSansSerif: -apple-system, BlinkMacSystemFont, "Helvetica Neue",
    "PingFang SC", "Microsoft YaHei", "Source Han Sans SC", "Noto Sans CJK SC",
    "WenQuanYi Micro Hei", sans-serif;
  --FontMonospace: Menlo, Monaco, Consolas, "Andale Mono", "lucida console",
    "Courier New", monospace;
}

/* Body style */
body {
  margin: 0px;
  overflow: hidden;
  font-family: var(--FontSansSerif);
  font-size: 14px;
  background-color: var(--p-surface-0);
}

.DarkMode body {
  background-color: var(--p-surface-950);
}

/* Native element override style */
a {
  color: var(--p-primary-color);
  text-decoration: none;
}

button {
  padding: unset;
  background-color: transparent;
  border: none;
  cursor: pointer;
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

input {
  font-family: inherit;
}

/* Layout */
#Root {
  display: flex;
  height: 100vh;
  width: 100vw;
}

#LeftPanel {
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  width: 300px;
  border-right: 1px solid var(--p-content-border-color);
  position: relative;
  background-color: var(--p-content-background);
  overflow: auto;

  .ResizeHandle {
    position: absolute;
    height: 100%;
    width: 2px;
    right: 0px;
    cursor: col-resize;

    &:hover {
      background-color: var(--p-primary-color);
    }
  }
}

#MainMenu {
  padding: 0.5rem 0.75rem;
  height: 36px;
  border-bottom: 1px solid var(--p-content-border-color);
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: sticky;
  top: 0px;
  background-color: inherit;
}

#RightPanel {
  flex-grow: 1;
  overflow: hidden;
}

#PageWrapper {
  height: calc(100vh - 36px);
  position: relative;
  overflow: auto;
}

#WelcomeView {
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  user-select: none;

  .Wrapper {
    min-width: 250px;
    text-align: center;
    display: flex;
    flex-direction: column;
    gap: 8px;
  }
}

/* Atom class */
.Dragging {
  outline: 2px dashed var(--p-primary-color);
}

.Active {
  color: var(--p-contextmenu-item-focus-color);
  background-color: var(--p-navigation-item-focus-background) !important;
}

/* Custom components style */
.Tree {
  user-select: none;

  .TreeChildren {
    padding: 0px 0px 0px 1.2rem;
    position: relative;

    &::before {
      content: "";
      position: absolute;
      width: 1px;
      height: 100%;
      background-color: var(--p-content-border-color);
    }
  }

  .TreeLeaf {
    .pi:first-child {
      visibility: hidden;
    }
  }

  .TreeGroup,
  .TreeLeaf {
    &:hover,
    &:focus {
      background-color: var(--p-content-hover-background);
    }
  }

  .TreeToggle {
    display: flex;
    gap: 8px;
    align-items: center;
    width: 100%;
    padding: 0.5rem 0.75rem;
    word-break: keep-all;
  }

  .TreeRenaming {
    padding: .5rem 0.75rem;
    display: flex;
    flex-direction: column;
  }

  li {
    &:hover,
    &:focus {
      background-color: var(--p-content-hover-background);
    }
  }
}

.Tabs {
  display: flex;
  height: 36px;
  background-color: var(--p-content-background);
  border-bottom: 1px solid var(--p-content-border-color);
  user-select: none;
  overflow: hidden;

  .Tab {
    display: flex;
    align-items: center;
    flex-shrink: 0;
    padding: 0px 0.75rem;
    line-height: 35px;
    border-right: 1px solid var(--p-content-border-color);
    position: relative;
    width: 200px;

    &:hover,
    &:focus {
      background-color: var(--p-content-hover-background);
    }

    &.AutoWidth {
      width: auto;
    }

    &.TabActive::after {
      content: "";
      position: absolute;
      bottom: 0px;
      left: 0px;
      height: 2px;
      width: 100%;
      background-color: var(--p-navigation-item-focus-background);
    }

    .TabLabel {
      flex-grow: 1;
      text-align: left;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }

    .TabButton {
      display: inline-flex;
    }
  }
}

.Panel {
  display: flex;
  flex-direction: column;

  .PanelHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    height: 36px;
    padding: 0.5rem 0.75rem;
    user-select: none;

    .PanelTitle {
      display: flex;
      gap: 8px;

      span {
        font-weight: bolder;
      }
    }

    .PanelExtra {
      display: flex;
      align-items: center;
      gap: 8px;

      button:hover {
        color: var(--p-primary-color);
      }
    }
  }
}

.ListSelect {
  display: flex;
  flex-direction: column;

  .ListSelectItem {
    cursor: pointer;
    padding: 0.5rem 0.75rem;
    display: flex;
    gap: 8px;
    align-items: center;
    user-select: none;

    &:hover,
    &:focus {
      outline: none;
      background-color: var(--p-content-hover-background);
    }
  }
}

/* PrimeVue override style */
.p-dialog {
  min-width: 500px;

  .p-dialog-content {
    display: flex;
    flex-direction: column;
    gap: 16px;
    padding-top: 2px;
  }
}

/* Editor style */
.Toolbar {
  background-color: var(--p-content-background);
  border-bottom: 1px solid var(--p-content-border-color);
  display: flex;
  position: sticky;
  top: 0px;
  z-index: 2;
  overflow: hidden;

  .i {
    font-size: 24px;
  }

  .ToolGroup {
    display: flex;
    gap: 1rem;
    padding: 0px 0.75rem;
    border-right: 1px solid var(--p-content-border-color);
  }


  button:disabled {
    color: var(--p-text-muted-color);
  }
}

.ToolActive {
  color: var(--p-primary-color);
}

.BubbleMenu {
  background-color: var(--p-content-background);
  position: absolute;
  padding: 0px 0.75rem;
  border: 1px solid var(--p-content-border-color);
  gap: 1rem;
  border-radius: var(--p-border-radius-xs);
  display: none;
  z-index: 3;

  .i {
    font-size: 24px;
  }

  &.Visible {
    display: flex;
  }
}

.EditArea {
  max-width: 800px;
  margin: 0px auto;
  padding: 8px;
  display: flex;
  flex-direction: column;

  .TitleInput {
    font-size: 2rem;
    background-color: transparent;
    outline: none;
    border: none;
  }
}

.ProseMirror {
  position: relative;
  word-wrap: break-word;
  white-space: break-spaces;
  font-variant-ligatures: no-common-ligatures;
  outline: none;
  font-size: 1rem;
}

.isEmpty::after {
  content: "点击此处输入正文...";
  position: absolute;
  top: 1rem;
  color: var(--p-text-muted-color);
  cursor: text;
}

.ProseMirror pre {
  white-space: pre-wrap;
}

.ProseMirror li {
  position: relative;
}

.ProseMirror-hideselection *::selection {
  background: transparent;
}
.ProseMirror-hideselection *::-moz-selection {
  background: transparent;
}
.ProseMirror-hideselection {
  caret-color: transparent;
}

/* See https://github.com/ProseMirror/prosemirror/issues/1421#issuecomment-1759320191 */
.ProseMirror [draggable][contenteditable="false"] {
  user-select: text;
}

.ProseMirror-selectednode {
  img,
  hr {
    outline: 2px solid var(--p-primary-color);
  }
}

/* Make sure li selections wrap around markers */

li.ProseMirror-selectednode {
  outline: none;
}

/* Protect against generic img rules */

img.ProseMirror-separator {
  display: inline !important;
  border: none !important;
  margin: 0 !important;
}

p:has(img) {
  text-align: center;
}

code {
  padding: 0.125rem 0.25rem;
  font-size: 0.85rem;
  font-family: var(--FontMonospace);
  background-color: var(--p-content-hover-background);
}
