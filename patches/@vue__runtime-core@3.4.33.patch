diff --git a/dist/runtime-core.esm-bundler.js b/dist/runtime-core.esm-bundler.js
index 5bb81bb065a7130acc550d559b6411185058ae32..fa8c67af9e2a27bc3cead836fee4e7e31f53640c 100644
--- a/dist/runtime-core.esm-bundler.js
+++ b/dist/runtime-core.esm-bundler.js
@@ -1273,7 +1273,7 @@ const KeepAliveImpl = {
     exclude: [String, RegExp, Array],
     max: [String, Number]
   },
-  setup(props, { slots }) {
+  setup(props, { slots, expose }) {
     const instance = getCurrentInstance();
     const sharedContext = instance.ctx;
     if (!sharedContext.renderer) {
@@ -1349,15 +1349,22 @@ const KeepAliveImpl = {
       resetShapeFlag(vnode);
       _unmount(vnode, instance, parentSuspense, true);
     }
+    console.log("Patched! - 2")
+
     function pruneCache(filter) {
       cache.forEach((vnode, key) => {
         const name = getComponentName(vnode.type);
-        if (name && (!filter || !filter(name))) {
-          pruneCacheEntry(key);
+        // if (name && (!filter || !filter(name))) {
+        //   pruneCacheEntry(key);
+        // }
+        console.log(name, key)
+        if (name && (!filter || !filter(key) || !filter(key))) {
+          pruneCacheEntry(key)
         }
       });
     }
     function pruneCacheEntry(key) {
+      console.log(key)
       const cached = cache.get(key);
       if (!current || !isSameVNodeType(cached, current)) {
         unmount(cached);
@@ -1367,6 +1374,7 @@ const KeepAliveImpl = {
       cache.delete(key);
       keys.delete(key);
     }
+    expose({pruneCacheEntry})
     watch(
       () => [props.include, props.exclude],
       ([include, exclude]) => {
